@import "~kingdom-css/src/modules/layout";
@import "~kingdom-css/src/modules/sizing";
@import "~kingdom-css/src/modules/spacing";
@import "~kingdom-css/src/modules/colors";
@import "~kingdom-css/src/modules/converters";

@media (min-width: length-px($readable-line-length-max + $readable-line-length-min)) {
  @supports (display: grid) {
    .blog-entry {
      width: 100%;
      max-width: 100%;
      padding: 0;
      display: grid;
      grid-auto-flow: dense;
      @include length-relative(grid-column-gap, 1/2);

      grid-template-columns:
        minmax(max(env(safe-area-inset-left), env(safe-area-inset-right)), 1fr)
        [content-start header-start main-start intro-start] $readable-line-length-max [intro-end main-end aside-start] fit-content(
          $readable-line-length-min
        )
        [aside-end header-end content-end] minmax(max(env(safe-area-inset-left), env(safe-area-inset-right)), 1fr);

      grid-template-rows:
        [main-start header-start intro-start]
        1fr
        auto
        [intro-end]
        auto
        [header-end content-start];

      background-color: transparent;
      color: inherit;

      > * {
        grid-column-start: main-start;
        grid-column-end: main-end;
        @include apply-background-color(body);
        margin-top: 0;
        @include padding-relative($fraction: 1/2);
      }

      > hr {
        height: auto;
      }

      > img {
        padding: 0;
      }

      > p {
        width: auto;
      }

      .blog-entry-header {
        grid-row-start: intro-start;
      }

      .blog-entry-footer {
        grid-row-end: intro-end;
      }

      .blog-content-start {
        grid-row-end: content-start;
      }

      .blog-latest-entries {
        grid-row-start: header-start;
        grid-row-end: header-end;
        grid-column-start: aside-start;
        grid-column-end: aside-end;
        @include length-relative(margin-bottom, 1/2);
      }

      > .blog-related-content {
        grid-column-start: aside-start;
        grid-column-end: aside-end;
        order: 1;
        align-self: center;
        @include length-relative(margin-top margin-bottom, 1/2);
      }

      %float-reset {
        max-width: none;
        margin-left: auto;
        margin-right: auto;

        // For specificity...
        &:not(figure) {
          max-width: none;
        }
      }

      > .float-right,
      > .float-left {
        @extend %float-reset;
      }

      %bleed-reset {
        width: 100%;
        margin-left: 0;
        margin-right: 0;
      }

      > .full-column-bleed {
        @extend %bleed-reset;
      }

      > .full-bleed {
        grid-column: 1 / -1;
        @extend %bleed-reset;
      }

      > .start-margin-bleed {
        grid-column-start: 1;
        @extend %bleed-reset;
      }

      > .end-margin-bleed {
        grid-column-end: -1;
        @extend %bleed-reset;
      }

      > .span-content {
        grid-column-start: content-start;
        grid-column-end: content-end;
      }

      > .children\:boxed {
        @include padding-relative(left right, 0);
      }
    }
  }
}
